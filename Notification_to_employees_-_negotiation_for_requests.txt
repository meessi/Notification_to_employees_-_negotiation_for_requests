import groovy.time.TimeCategory

def date; // Текущая дата (+ время)

use(TimeCategory)
{
 	date = new Date();
	def newDate = date + 1.day - 1.minute; 
	utils.edit(subject, ['dateReminder' : newDate]); 
}

def daysSupport = [1, 2, 3, 4, 5]; // Дни работы скрипта (относительно дня недели)
def currentDay = api.date.getNumberOfDayOfWeek(date); // Текущий день недели

/*
* Переменные для формирования оповещения
* 
*/
def initiator = '';
def currentPerson = '';
def newPerson = '';

/*
* Метод добавления сотрудника в получатели оповещения
* 
*/
def addToEmployeeToNotification =
{
	employee ->
	
	if (api.mail.isValidEmail(employee.email))
    {
        notification.toEmployee << employee;
        logger.info("Оповещение о голосовании: ${employee.title}")
  	}
    else 
    {
        logger.info("Сотруднику '${employee.title}' оповещение не отправлено: некорректный адрес электронной почты \"${employee.email}\".")
    }
}

/*
* Метод добавления сотрудника в копию оповещения
* 
*/
def addCcEmployeeToNotification =
{
	employee ->
	
	if (api.mail.isValidEmail(employee.email))
    {
        notification.ccEmployee << employee;
        logger.info("Оповещение о голосовании: ${employee.title}")
  	}
    else 
    {
        logger.info("Сотруднику '${employee.title}' оповещение не отправлено: некорректный адрес электронной почты \"${employee.email}\".")
    }
}

def process =
{
	def employee = subject?.voter_em; // Получатель (соглсовант) оповещения
	def accountant = utils.get('employee$33881292'); // Бухгалтер KOVALENKO Olga_F Fedori employee$104032
	def otherEmployees = [employee.head, subject.source.clientEmployee, accountant]; // Другие получатели (руководитель согласованта, инициатор запроса, бухгалтер) оповещения
	
	addToEmployeeToNotification(employee); // Добавление согласованта в оповещение
	
	if (subject.countReminders >= 3) // Проверка на количество напоминаний-оповещений 
	{
		for (def i = 0; i < otherEmployees.size(); i++)
		{
			addCcEmployeeToNotification(otherEmployees[i]); // Добавление других получателей в оповещение
		}
	}
	
	utils.edit(subject, ['countReminders' : subject.countReminders + 1]);
	
	initiator = subject.source.clientEmployee != null ? subject.source.clientEmployee?.title : '';
	currentPerson = subject.source.currentPerson != null ? (subject.source.currentPerson.title + ' (' + subject.source.currentPerson.privateCode + ')') : '';
	newPerson = subject.source.newPerson != null ? (subject.source.newPerson.title + ' (' + subject.source.newPerson.privateCode + ')') : '';
}

if (daysSupport.contains(currentDay))
{
	process();	
}

/*
* Добавление переменных в оповещение
* 
*/

notification.scriptParams['initiator'] = initiator;
notification.scriptParams['currentPerson'] = currentPerson;
notification.scriptParams['newPerson'] = newPerson;